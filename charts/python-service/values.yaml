replicaCount: 1
image:
  repository: doclosjs/flask-python-service
  pullPolicy: IfNotPresent
  tag: "v1"
imagePullSecrets:
  - name: regcred
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
service:
  type: ClusterIP
  port: 5000
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  hosts:
    - host: python-service.app
      paths:
        - path: /
          pathType: Prefix
  tls:
    - hosts:
      - python-service.app
      secretName: python-service-tls

resources: {}
livenessProbe:
  httpGet:
    path: /api/v1/health
    port: http
readinessProbe:
  httpGet:
    path: /api/v1/health
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

volumes: []
volumeMounts: []
nodeSelector: {}

tolerations: []

affinity: {}
